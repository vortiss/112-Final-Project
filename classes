import java.util.Random;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

class userObject{
    private static int lives;
    static Pair position;
    static boolean alive;
    static String facing;
    static Pair size;
    
    public userObject(World w){
	size=new Pair(32,32);
	facing="Up";
	alive=true;
	lives=3;
	position=new Pair(w.width/2,w.height-32);
	DrawImage.changePicture("Frog_"+facing+"_Sprite_0");	
    }
    
    public static void draw(Graphics g){
	DrawImage.changePicture("Frog_"+facing+"_Sprite_0");
	g.drawImage(DrawImage.picture, position.x,position.y,size.x,size.y,null);
    }
    
    public static void move(char direction, World w){
	w.gameRunning.getGraphics().drawImage(DrawImage.picture,position.x,position.y,size.x,size.y,null);
	if(direction=='w'){
	    facing="Up";
	    DrawMove(w);	
	}
	if(direction=='a'){
	    facing="Left";
	    DrawMove(w);
	}
	if(direction=='s'){
	    facing="Down";
	    DrawMove(w);
	}
	if(direction=='d'){
	    facing="Right";
	    DrawMove(w);
	}	
	DrawImage.changePicture("Frog_"+facing+"_Sprite_0");
	w.gameRunning.getGraphics().drawImage(DrawImage.picture,position.x,position.y,size.x,size.y,null);
	stillAlive(w);
    }
    
    
    public static void DrawMove(World w){
	DrawImage.changePicture("Frog_"+facing+"_Sprite_1");
	w.gameRunning.getGraphics().drawImage(DrawImage.picture,position.x,position.y,size.x,size.y,null);
	try{Thread.sleep(3);}catch(InterruptedException e){}
	if(facing.equals("Left") || facing.equals("Right")){
	    for(int i=0;i<2;i++){
		if(i<1)
		    DrawImage.changePicture("Frog_"+facing+"_Sprite_2");
		if(i>=1)
		    DrawImage.changePicture("Frog_"+facing+"_Sprite_3");
		if(facing.equals("Right"))
		    position.x = position.x + 8;
		if(facing.equals("Left"))
		    position.x = position.x - 8;
		w.gameRunning.getGraphics().drawImage(DrawImage.picture,position.x,position.y,size.x,size.y,null);
	    }
	}
	if(facing.equals("Up") || facing.equals("Down")){
	    for(int i=0;i<2;i++){
		if(i<1)
		    DrawImage.changePicture("Frog_"+facing+"_Sprite_2");
		if(i>=1)
		    DrawImage.changePicture("Frog_"+facing+"_Sprite_3");
		if(facing.equals("Up"))
		    position.y = position.y - 8;
		if(facing.equals("Down"))
		    position.y = position.y + 8;
		w.gameRunning.getGraphics().drawImage(DrawImage.picture,position.x,position.y,size.x,size.y,null);
	    }
	}
    }
    
    public static void stillAlive(World w){
	
	if(!alive&&lives>0){
	    respawn(w);
	    draw(w.gameRunning.getGraphics());
	} 
	if (((position.y >= 0  && (position.y + size.y) <= w.height/12) || 
	     (position.y >= w.height*3/12 && (position.y + size.y) <= w.height*4/12) || 
	     (position.y >= w.height*6/12 && (position.y + size.y) <= w.height*7/12) ||
             (position.y >= w.height*9/12 && (position.y + size.y) <= w.height*10/12)
	     ) && w.contactLog()==-1 && alive ) {
	    alive=false;
	    respawn(w);
	    w.gameRunning.getGraphics().drawImage(DrawImage.picture,position.x,position.y,size.x,size.y,null);
	}
	if(w.hit()){
	    alive=false;
	    respawn(w);
	}
	if((!alive && lives <= 0) || lives < 0){ w.defeated=true;}
	
    }
    public static void respawn(World w){
	position.x = w.width/2;
	position.y = w.height-32;
	facing="Up";
	alive=true;
	lives=lives-1;
	draw(w.gameRunning.getGraphics());
    }
}

class Pair{
    //All other classes sould use the get methods so these are private
    public int x;
    public int y;
    
    public Pair(int initX, int initY){
	x = initX;
	y = initY;
    }

    public boolean equals(Pair compare){
	boolean equal=false;
	if(x == compare.x && y == compare.y){
	    equal = true;
	}
	return equal;
    }
}

class Obstacle{
    int speed;
    Pair size;
    Pair position;
    Random rand;
    String facing;
    String color;
    
    public Obstacle(Pair p, int leftorright, World w){	
	rand = new Random();
	/*This if else determines the direction the car moves in and how fast*/
	if (leftorright == 1){
	    facing = "Right";
	    speed = 1 + rand.nextInt(5);
	}
	else {
	    facing = "Left";
	    speed = -1 - rand.nextInt(5);
	}
	/*this if else decides the color*/
	if(rand.nextInt(2) == 1)
	    color = "Blue";
	else
	    color = "Red";
	size = new Pair(64, 64);
	position = p;
	DrawImage.changePicture("Car_"+facing+"_Sprite_"+color);
    }
    
    public void update(World w){
	position.x = position.x + speed;
	if (speed < 0)
	    if (position.x <= 0)
		position.x = w.width;
	
	if (speed > 0)
	    if (position.x >= w.width)
		position.x = 0;
    }
    
    public void draw(Graphics g, World w){
	g.setColor(w.gameRunning.background);
	DrawImage.changePicture("Car_"+facing+"_Sprite_"+color);
	g.drawImage(DrawImage.picture, position.x, position.y, size.x, size.y, null);
    }	
}

class environmentalObjects{
    int speed;
    Pair size;
    int type;
    Pair position;
    Random rand;
    
    public environmentalObjects(Pair p, int leftorright,World w){
	rand = new Random();	
	if (leftorright == 1){
	    speed = 1 + rand.nextInt(5);
	}
	else {
	    speed = -1 - rand.nextInt(5);
	}
	size = new Pair(64, 64);
	position = p;
	DrawImage.changePicture("Log_Sprite");
    }
    
    
    public void update(World w){
	position.x = position.x + speed;
	if (speed < 0)
	    if (position.x <= 0)
		position.x = w.width;
	
	if (speed > 0)
	    if (position.x >= w.width)
		position.x = 0;
    }
    
    public void draw(Graphics g, World w){
	g.setColor(w.gameRunning.background);	
	DrawImage.changePicture("Log_Sprite");
	g.drawImage(DrawImage.picture, position.x, position.y, size.x, size.y, null);
	
    }
    
}


class Terrain{ 
    public static void build(Graphics g){
	for (int i = 0; i < 12; i++){
	    if (i % 3 == 2)
		g.setColor(Color.GREEN);
	    if (i % 3 == 1) 	
		g.setColor(Color.GRAY);
	    if(i % 3 == 0)
		g.setColor(Color.BLUE);	
	    
	    g.fillRect(0,i * World.height / 12, World.width, World.height / 12);
	    
	}
    }	
}
