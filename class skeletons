import java.util.Random;
import java.util.Scanner;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import java.awt.Graphics;

class userObject{
	private static int lives;
	pair position;
	image player;
	private boolean alive;
	
	public static userObject(World w){
		alive=true;
		lives=3;
		position(w.width/2,w.height-/*Ycoordinate of the top left corner of the sprit*/);
		player = imageInput();
	}
	public void move(char c, World w){
		if(c=='w'){
			position.y=position.y-30;
		}
		if(c=='a'){
			position.x=position.x-30;
		}
		if(c=='s'){
			position.y=position.y+30;
		}
		if(c=='d'){
			position.x=position.x+30;
		}
		stillAlive(w);
	}
	
	public void stillAlive(World w){
		int i=0;
		while(alive&&i<world.obstacles.size()){
		if(position.equals(world.obstacles[i].position)){
			alive=false;
		}
			i++;
		}
		if(!alive&&lives>0){
			lives=lives-1;
			position.x=w.initWidth/2
			position.y=/*Y coordinate of the top left corner of sprite at the the start*/;
			alive=true;
		}
		else{ w.gameover();}
	}
    
}

class Pair{
	public double x;
	public double y;
	
	public Pair(double initX, double initY){
		x = initX;
		y = initY;
	}
	
	public Pair add(Pair toAdd){
		return new Pair(x + toAdd.x, y + toAdd.y);
	}
	
	public Pair divide(double denom){
		return new Pair(x / denom, y / denom);
	}
	public Pair times(double val){
		return new Pair(x * val, y * val);
        }
	
	@Override
	public boolean equals(pair compare){
		boolean equal=false;
		if(x==compare.x&&y==compare.y){
	        	equal=true;
		}
		return equal;
        }
}


}

class Obstacle{
    double speed;
    Pair size;
    int type;
    Pair position;
    Scanner pictureFinder;
    Random rand;
    
    public Obstacle(Pair p, int leftorright){	
	if (leftorright == 1){
	speed=0.0+rand.nextDouble(10.0);
	}
	else {
	speed = 0.0 - rand.nextDouble(10.0);
	}
	size = new Pair(10,5);
	position.x = p.x;
	position.y = p.y;
	
	
	}
    }
    
    public void update(double time){
	position.x=position.x+speed*time;
	if (speed < 0)
		if (position.x <= 0)
			position.x = World.width;
			
	if (speed > 0)
		if (position.x >= World.width)
			position.x = 0;
    }
    public void draw(Graphics g){	
    
	g.drawRect(position.x,position.y,size.x,size.y);
    }	
}

class environmentalObjects{
 double speed;
    Pair size;
    int type;
    Pair position;
    Scanner pictureFinder;
    Random rand;

	 public environmentalObjects(Pair p, int leftorright){	
	if (leftorright == 1){
	speed=0.0+rand.nextDouble(10.0);
	}
	else {
	speed = 0.0 - rand.nextDouble(10.0);
	}
	size = new Pair(10,5);
	position.x = p.x;
	position.y = p.y;
	
	
	}
    }
    
    public void update(double time){
	position.x=position.x+speed*time;
	if (speed < 0)
		if (position.x <= 0)
			position.x = World.width;
			
	if (speed > 0)
		if (position.x >= World.width)
			position.x = 0;
    }
    public void draw(Graphics g){	
    
	g.drawRect(position.x,position.y,size.x,size.y);
    }	
}
}

class powerup{
    pair position;
    Random rand;
    public powerup(){
	rand=new Random;	
	position=new pair(0.0+rand.nextInt,0.0+rand.nextInt);
    }
}

class terrain{
    
    public terrain(Graphics g){
	build( g);
	
    }
    
    public void build( Graphics g){
	
	    for (int i = 1; i < 13; i++){
		if (i % 3 == 2)
		    {g.setColor(Color.GREEN);}
		if (i % 3 == 1) 	
		    {g.setColor(Color.GREY);}
		if(i % 3 == 0)
		    {g.setColor(Color.BLUE);}
		    (g.fill(new Rectangle2D.Double(0, i*HEIGHT/12, width, HEIGHT/12)));
		
	    
	}
    }	
}
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

public class ImageInput
{

  public ImageInput()
  {
    try
    {
      
      BufferedImage animal = ImageIO.read(new File("/Users/al/some-picture.jpg"));
     
    } 
    catch (IOException e)
    {
      
    }
  }

  public static void main(String[] args)
  {
    new ImageInput();
  }

}
